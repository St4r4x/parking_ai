#!/usr/bin/env python3
"""Script de test pour v√©rifier les imports et la configuration."""

import sys
import os

# Ajouter le dossier src au path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_imports():
    """Test les imports des modules."""
    print("üîç Test des imports...")
    
    try:
        from config import CAMERA_SIZE, LOOP_DELAY
        print("‚úÖ config.py - OK")
        print(f"   CAMERA_SIZE: {CAMERA_SIZE}")
        print(f"   LOOP_DELAY: {LOOP_DELAY}")
    except ImportError as e:
        print(f"‚ùå config.py - ERREUR: {e}")
        return False
    
    try:
        from camera_manager import CameraManager
        print("‚úÖ camera_manager.py - OK")
    except ImportError as e:
        print(f"‚ùå camera_manager.py - ERREUR: {e}")
        print("   V√©rifiez que python3-picamera2 est install√©")
    
    try:
        from plate_detector import PlateDetector
        print("‚úÖ plate_detector.py - OK")
    except ImportError as e:
        print(f"‚ùå plate_detector.py - ERREUR: {e}")
        print("   V√©rifiez que python3-opencv et python3-numpy sont install√©s")
    
    try:
        from ocr_processor import OCRProcessor
        print("‚úÖ ocr_processor.py - OK")
    except ImportError as e:
        print(f"‚ùå ocr_processor.py - ERREUR: {e}")
        print("   V√©rifiez que python3-opencv est install√©")
    
    try:
        from license_plate_detector import LicensePlateDetector
        print("‚úÖ license_plate_detector.py - OK")
    except ImportError as e:
        print(f"‚ùå license_plate_detector.py - ERREUR: {e}")
    
    return True

def test_system_dependencies():
    """Test les d√©pendances syst√®me."""
    print("\nüîç Test des d√©pendances syst√®me...")
    
    import subprocess
    
    # Test Tesseract
    try:
        result = subprocess.run(['tesseract', '--version'], 
                              capture_output=True, text=True)
        print("‚úÖ tesseract-ocr - OK")
    except FileNotFoundError:
        print("‚ùå tesseract-ocr - NON INSTALL√â")
        print("   Installez avec: sudo apt-get install -y tesseract-ocr")
    
    # Test cam√©ra (si disponible)
    try:
        result = subprocess.run(['vcgencmd', 'get_camera'], 
                              capture_output=True, text=True)
        if 'detected=1' in result.stdout:
            print("‚úÖ Cam√©ra Pi - D√âTECT√âE")
        else:
            print("‚ö†Ô∏è  Cam√©ra Pi - NON D√âTECT√âE")
    except FileNotFoundError:
        print("‚ÑπÔ∏è  Commande vcgencmd non disponible (normal si pas sur Pi)")

if __name__ == "__main__":
    print("üöÄ Test du syst√®me de d√©tection de plaques\n")
    test_imports()
    test_system_dependencies()
    print("\n‚úÖ Test termin√©!")
